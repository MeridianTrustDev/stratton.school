/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    headers: Header;
    navigationMenu: NavigationMenu;
    users: User;
    tenants: Tenant;
    pages: Page;
    media: Media;
    "payload-preferences": PayloadPreference;
    "payload-migrations": PayloadMigration;
  };
  globals: {};
  locale: null;
  user: User & {
    collection: "users";
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "headers".
 */
export interface Header {
  id: string;
  title: string;
  logo?: string | Media | null;
  primaryNavigation?: (string | null) | NavigationMenu;
  secondaryNavigation?: (string | null) | NavigationMenu;
  tenant?: (string | null) | Tenant;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigationMenu".
 */
export interface NavigationMenu {
  id: string;
  title: string;
  type?: ("primary" | "secondary" | "footer") | null;
  navItems?:
    | {
        type?: ("reference" | "custom" | "parent") | null;
        newTab?: boolean | null;
        label: string;
        showLabel?: boolean | null;
        reference?: (string | null) | Page;
        url?: string | null;
        icon?: string | null;
        children?:
          | {
              type?: ("reference" | "custom" | "parent") | null;
              newTab?: boolean | null;
              label: string;
              reference?: (string | null) | Page;
              url?: string | null;
              children?:
                | {
                    type?: ("reference" | "custom") | null;
                    newTab?: boolean | null;
                    label: string;
                    reference?: (string | null) | Page;
                    url?: string | null;
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  tenant?: (string | null) | Tenant;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  publishedAt?: string | null;
  title: string;
  type?: ("page" | "home") | null;
  hero?: {
    slides?:
      | {
          image?: string | Media | null;
          primaryText?: string | null;
          secondaryText?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  layout: (
    | {
        columns?:
          | {
              content?:
                | (
                    | {
                        position?: ("default" | "fullscreen") | null;
                        media: string | Media;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: "media-block";
                      }
                    | {
                        text?: {
                          root: {
                            type: string;
                            children: {
                              type: string;
                              version: number;
                              [k: string]: unknown;
                            }[];
                            direction: ("ltr" | "rtl") | null;
                            format:
                              | "left"
                              | "start"
                              | "center"
                              | "right"
                              | "end"
                              | "justify"
                              | "";
                            indent: number;
                            version: number;
                          };
                          [k: string]: unknown;
                        } | null;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: "text";
                      }
                  )[]
                | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: "columnsBlock";
      }
    | {
        position?: ("default" | "fullscreen") | null;
        media: string | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: "media-block";
      }
    | {
        text?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ("ltr" | "rtl") | null;
            format:
              | "left"
              | "start"
              | "center"
              | "right"
              | "end"
              | "justify"
              | "";
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
        blockName?: string | null;
        blockType: "text";
      }
  )[];
  slug?: string | null;
  tenant?: (string | null) | Tenant;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: string | Media | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ("draft" | "published") | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants".
 */
export interface Tenant {
  id: string;
  name: string;
  domain?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  firstName?: string | null;
  lastName?: string | null;
  roles: ("super-admin" | "user")[];
  tenants?:
    | {
        tenant: string | Tenant;
        roles: ("admin" | "user")[];
        id?: string | null;
      }[]
    | null;
  lastLoggedInTenant?: (string | null) | Tenant;
  sub?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: "users";
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}

declare module "payload" {
  export interface GeneratedTypes extends Config {}
}
